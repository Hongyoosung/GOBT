using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RunAway : GAction
{
    public override bool PrePerform()
    {
        return true;
    }

    public override bool PostPerform()
    {
        return true;
    }

    public override float CalculateUtility(AgentConsiderations[] agentConsiderationsList)
    {
        float currentUtilityScore = 0;

        if (agentConsiderationsList.Length < 3)
        {
            Debug.LogError("Attack ?????????? 3???? ?????????? ??????????.");
            
        }

        bool isEnemy = agentConsiderationsList[4].GetEnemyState();


        if(isEnemy)
        {
            // ?????? 50 ?????? ???? ???? ???? (???????? ???????? agentConsiderationsList[0])
            float healthScore = agentConsiderationsList[0].GetState();
            if (healthScore < 50)
            {
                currentUtilityScore += 1f;
            }

            // ?????? ?????? ???? ???????? ???? ???? ???? ???? (???????? ???????? agentConsiderationsList[1]?? agentConsiderationsList[2])
            float levelScore = agentConsiderationsList[1].GetState() - agentConsiderationsList[2].GetState();
            if (levelScore < 0)
            {
                currentUtilityScore += 1f;
            }
        }
        

        SetCurrentUtilityScore(currentUtilityScore);
        return currentUtilityScore;
    }

    // ?????? SetCurrentUtilityScore ??????, ???? ???????? ?????? ????????.
    public void SetCurrentUtilityScore(float score)
    {
        CurrentUtilityScore = score;
    }
}
